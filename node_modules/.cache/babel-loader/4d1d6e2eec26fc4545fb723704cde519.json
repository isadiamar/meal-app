{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isabel D\\xEDaz\\\\Desktop\\\\Proyectos\\\\meal-app\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport styles from \"./Cart.module.css\";\nimport CartItem from \"../Cart/CartItem/CartItem\";\nimport Modal from \"../UI/Modal/Modal\";\nimport CartContext from \"../../store/cart-context\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  //Context\n  const cartCtx = useContext(CartContext); //States\n\n  const [formIsShow, setFormIsShow] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false); //Variables\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0; // Remove Handler\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  }; // Add Handler\n\n\n  const cartItemAddHandler = item => {\n    const cartItem = { ...item,\n      amount: 1\n    };\n    cartCtx.addItem(cartItem);\n  }; //Form Handler\n\n\n  const orderHandler = () => {\n    formIsShow === true ? setFormIsShow(false) : setFormIsShow(true);\n  }; //Submit Order Handler\n\n\n  const submitOrderHandler = async userData => {\n    //Update Submit States\n    setIsSubmitting(true);\n    setDidSubmit(false); //Fetch order\n\n    await fetch(\"https://meal-app-77a93-default-rtdb.firebaseio.com/orders.json\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    }); //Update Submit States\n\n    setIsSubmitting(false);\n    setDidSubmit(true); //Clear Cart\n\n    cartCtx.clearCart;\n  }; //Items added to the cart\n\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onAdd: cartItemAddHandler.bind(null, item),\n      onRemove: cartItemRemoveHandler.bind(null, item.id)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this); //Order Button Modal connected to formIsShow State\n\n\n  const ModalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles[\"button--alt\"],\n      onClick: props.onHideCart,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this); // Form Modal connected to the submit states\n\n\n  const CartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), formIsShow && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onHideCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), !formIsShow && ModalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this); // Is Loading state handler\n\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending order data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 36\n  }, this); // The order was submitted\n\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Succesfully sent the order!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: props.onHideCart,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: [!isSubmitting && !didSubmit && CartModalContent, isSubmitting && isSubmittingModalContent, didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"CkwMFoh0Bw2Xm3SqUU37SzhU+uY=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/Isabel DÃ­az/Desktop/Proyectos/meal-app/src/components/Cart/Cart.js"],"names":["React","useContext","useState","styles","CartItem","Modal","CartContext","Checkout","Cart","props","cartCtx","formIsShow","setFormIsShow","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","cartItem","amount","addItem","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","clearCart","cartItems","map","name","price","bind","ModalActions","actions","onHideCart","button","CartModalContent","total","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport styles from \"./Cart.module.css\";\r\n\r\nimport CartItem from \"../Cart/CartItem/CartItem\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = (props) => {\r\n  //Context\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  //States\r\n  const [formIsShow, setFormIsShow] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n\r\n  //Variables\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  // Remove Handler\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  // Add Handler\r\n  const cartItemAddHandler = (item) => {\r\n    const cartItem = { ...item, amount: 1 };\r\n    cartCtx.addItem(cartItem);\r\n  };\r\n\r\n  //Form Handler\r\n  const orderHandler = () => {\r\n    formIsShow === true ? setFormIsShow(false) : setFormIsShow(true);\r\n  };\r\n\r\n  //Submit Order Handler\r\n  const submitOrderHandler = async (userData) => {\r\n    //Update Submit States\r\n    setIsSubmitting(true);\r\n    setDidSubmit(false);\r\n\r\n    //Fetch order\r\n    await fetch(\r\n      \"https://meal-app-77a93-default-rtdb.firebaseio.com/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderedItems: cartCtx.items,\r\n        }),\r\n      }\r\n    );\r\n\r\n    //Update Submit States\r\n    setIsSubmitting(false);\r\n    setDidSubmit(true);\r\n\r\n    //Clear Cart\r\n    cartCtx.clearCart;\r\n  };\r\n\r\n  //Items added to the cart\r\n  const cartItems = (\r\n    <ul className={styles[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  //Order Button Modal connected to formIsShow State\r\n  const ModalActions = (\r\n    <div className={styles.actions}>\r\n      <button className={styles[\"button--alt\"]} onClick={props.onHideCart}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={styles.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // Form Modal connected to the submit states\r\n  const CartModalContent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={styles.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {formIsShow && (\r\n        <Checkout\r\n          onConfirm={submitOrderHandler}\r\n          onCancel={props.onHideCart}\r\n        ></Checkout>\r\n      )}\r\n      {!formIsShow && ModalActions}\r\n    </React.Fragment>\r\n  );\r\n\r\n  // Is Loading state handler\r\n  const isSubmittingModalContent = <p>Sending order data...</p>;\r\n\r\n  // The order was submitted\r\n  const didSubmitModalContent = (\r\n    <React.Fragment>\r\n      <p>Succesfully sent the order!</p>\r\n      <div className={styles.actions}>\r\n        <button className={styles.button} onClick={props.onHideCart}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n  return (\r\n    <Modal>\r\n      {!isSubmitting && !didSubmit && CartModalContent}\r\n      {isSubmitting && isSubmittingModalContent}\r\n      {didSubmit && didSubmitModalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}