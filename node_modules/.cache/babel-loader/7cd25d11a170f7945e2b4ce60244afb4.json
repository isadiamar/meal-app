{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front-End\\\\Proyectos\\\\meal-app\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context'; //Reducer function\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cartReducer = () => {}; // Create the logic and the updates.\n\n\nexport const CartContextProvider = props => {\n  _s();\n\n  const [items, dispatch] = useState(['']);\n\n  const addItemToCartHandler = item => {\n    setCurrItems(prevItems => {\n      return [item, ...prevItems];\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    const newList = currItems.filter(item => item.id !== id);\n    setCurrItems(newList);\n  };\n\n  const cartContext = {\n    items: [],\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CartContextProvider, \"nUdxXcgKaFYdYnPlQheLfntgIJk=\");\n\n_c = CartContextProvider;\nexport default CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["D:/Front-End/Proyectos/meal-app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","cartReducer","CartContextProvider","props","items","dispatch","useState","addItemToCartHandler","item","setCurrItems","prevItems","removeItemFromCartHandler","id","newList","currItems","filter","cartContext","totalAmount","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;;;AACA,MAAMC,WAAW,GAAG,MAAK,CAExB,CAFD,C,CAIA;;;AACA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;;AAEA,QAAMC,oBAAoB,GAAIC,IAAD,IAAU;AACrCC,IAAAA,YAAY,CAAEC,SAAD,IAAe;AAC1B,aAAO,CAACF,IAAD,EAAO,GAAGE,SAAV,CAAP;AACD,KAFW,CAAZ;AAGD,GAJD;;AAMA,QAAMC,yBAAyB,GAAIC,EAAD,IAAQ;AACxC,UAAMC,OAAO,GAAGC,SAAS,CAACC,MAAV,CAAkBP,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYA,EAAvC,CAAhB;AACAH,IAAAA,YAAY,CAACI,OAAD,CAAZ;AACD,GAHD;;AAKA,QAAMG,WAAW,GAAG;AAClBZ,IAAAA,KAAK,EAAE,EADW;AAElBa,IAAAA,WAAW,EAAE,CAFK;AAGlBC,IAAAA,OAAO,EAAEX,oBAHS;AAIlBY,IAAAA,UAAU,EAAER;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,WAA7B;AAAA,cACGb,KAAK,CAACiB;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1BI;;GAAMlB,mB;;KAAAA,mB;AA4BX,eAAeA,mBAAf","sourcesContent":["import React,{useReducer} from 'react';\r\n\r\nimport CartContext from './cart-context';\r\n\r\n//Reducer function\r\nconst cartReducer = () =>{\r\n\r\n}\r\n\r\n// Create the logic and the updates.\r\nexport const CartContextProvider = (props) => {\r\n    const [items, dispatch] = useState(['']);\r\n\r\n    const addItemToCartHandler = (item) => {\r\n      setCurrItems((prevItems) => {\r\n        return [item, ...prevItems];\r\n      });\r\n    };\r\n  \r\n    const removeItemFromCartHandler = (id) => {\r\n      const newList = currItems.filter((item) => item.id !== id);\r\n      setCurrItems(newList);\r\n    };\r\n  \r\n    const cartContext = {\r\n      items: [],\r\n      totalAmount: 0,\r\n      addItem: addItemToCartHandler,\r\n      removeItem: removeItemFromCartHandler,\r\n    };\r\n  \r\n    return (\r\n      <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n      </CartContext.Provider>\r\n    );\r\n  };\r\n  \r\n  export default CartContextProvider;"]},"metadata":{},"sourceType":"module"}